{
  "appContext": "/devicemgt/",
  "isCloud": false,
  "isDeviceOwnerEnabled": false,
  "managerHTTPSURL": "https://%iot.manager.host%:%iot.manager.https.port%",
  "httpsURL": "https://%iot.gateway.host%:%iot.gateway.https.port%",
  "httpURL": "http://%iot.gateway.host%:%iot.gateway.http.port%",
  "wssURL": "https://%iot.core.host%:%iot.core.https.port%",
  "remoteSessionWSURL": "https://%iot.manager.host%:%iot.manager.https.port%",
  "portalURL": "https://%iot.analytics.host%:%iot.analytics.https.port%",
  "dashboardServerURL": "%https.ip%",
  "androidAgentDownloadURL": "https://%iot.manager.host%:%iot.manager.https.port%/devicemgt/public/cdmf.unit.device.type.android.type-view/assets/android-agent.apk",
  "windowsEnrollmentDir": "/windows-web-agent/enrollment",
  "iOSEnrollmentDir": "/ios-web-agent/enrollment",
  "iOSConfigRoot": "https://%iot.manager.host%:%iot.manager.https.port%/ios-enrollment/",
  "iOSAPIRoot": "https://%iot.manager.host%:%iot.manager.https.port%/ios/",
  "adminService": "https://%iot.manager.host%:%iot.manager.https.port%",
  "deviceInfoServiceAPI" : "/api/device-mgt/%device-type%/v1.0/admin/devices/info",
  "deviceLocationServiceAPI" : "/api/device-mgt/%device-type%/v1.0/admin/devices/location",
  "iOSDeviceInfoServiceAPI" : "/api/device-mgt/%device-type%/v1.0/admin/devices/info",
  "gatewayEnabled": true,
  "oauthProvider": {
    "appRegistration": {
      "appType": "webapp",
      "clientName": "iot_ui",
      "owner": "admin@carbon.super",
      "dynamicClientAppRegistrationServiceURL": "https://%iot.gateway.host%:%iot.gateway.https.port%/dynamic-client-web/register",
      "apiManagerClientAppRegistrationServiceURL": "https://%iot.gateway.host%:%iot.gateway.https.port%/api-application-registration/register/tenants",
      "grantType": "password refresh_token urn:ietf:params:oauth:grant-type:saml2-bearer urn:ietf:params:oauth:grant-type:jwt-bearer",
      "tokenScope": "admin",
      "callbackUrl": "https://%iot.gateway.host%:%iot.gateway.https.port%/api/device-mgt/v1.0",
      "samlGrantTypeName": "urn:ietf:params:oauth:grant-type:saml2-bearer"
    },
    "tokenServiceURL": "https://%iot.gateway.host%:%iot.gateway.https.port%/token"
  },
  "adminUser": "admin@carbon.super",
  "adminUserTenantId": "-1234",
  "adminRole": "admin",
  "userValidationConfig": {
    "usernameLength": 30,
    "usernameJSRegEx": "^[\\S]{3,30}$",
    "usernameRegExViolationErrorMsg": "Provided username is invalid.",
    "usernameHelpMsg": "Should be in minimum 3 characters long and do not include any whitespaces.",
    "firstnameJSRegEx": "^.{3,30}$",
    "firstnameRegExViolationErrorMsg": "Provided first name is invalid.",
    "lastnameJSRegEx": "^.{3,30}$",
    "lastnameRegExViolationErrorMsg": "Provided last name is invalid.",
    "emailJSRegEx": "/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/",
    "emailRegExViolationErrorMsg": "Provided email is invalid."
  },
  "groupValidationConfig": {
    "groupNameJSRegEx": "^[\\S]{3,30}$",
    "groupNameRegExViolationErrorMsg": "Group name should be in minimum 3 characters long and should not include any whitespaces.",
    "groupNameHelpMsg": "Should be in minimum 3 characters long and should not include any whitespaces."
  },
  "roleValidationConfig": {
    "roleNameJSRegEx": "^[\\S]{3,30}$",
    "roleNameRegExViolationErrorMsg": "Provided role name is invalid.",
    "roleNameHelpMsg": "should be in minimum 3 characters long and do not include any whitespaces."
  },
  "generalConfig": {
    "host": "https://%iot.manager.host%:%iot.manager.https.port%",
    "companyName": "Entgra Carbon Device Manager",
    "browserTitle": "Entgra Device Manager",
    "copyrightPrefix": "\u00A9 %date-year%, ",
    "copyrightOwner": "Entgra",
    "copyrightOwnersSite": "https://www.entgra.io/",
    "copyrightSuffix": " All Rights Reserved."
  },
  "scopes": [
    "dm:sign-csr",
    "dm:admin:devices:view",
    "dm:admin:topics:view",
    "rm:roles:add",
    "rm:users:add",
    "rm:roles:update",
    "rm:roles:permissions:view",
    "rm:roles:details:view",
    "rm:roles:view",
    "rm:roles:combined:add",
    "rm:roles:delete",
    "an:db:vulnerabilities",
    "an:db:non-compliant:count",
    "an:db:non-compliant",
    "an:db:by-groups",
    "an:db:device:count",
    "an:db:feature-non-compliant",
    "an:db:overview:count",
    "an:db:filtered-count",
    "an:db:details",
    "dm:activity:get",
    "dm:devices:delete",
    "dm:devices:app:view",
    "dm:devices:policy:view",
    "dm:devices:compliance:view",
    "dm:devices:features:view",
    "dm:devices:ops:view",
    "dm:devices:search",
    "dm:devices:details",
    "dm:devices:update",
    "dm:devices:view",
    "dm:conf:view",
    "dm:conf:manage",
    "pm:policies:remove",
    "pm:policies:priorities:update",
    "pm:policies:deactivate",
    "pm:policies:details:view",
    "pm:policies:add",
    "pm:policies:activate",
    "pm:policies:update",
    "pm:policies:change",
    "dm:policies:view",
    "um:users:add",
    "um:users:details:view",
    "um:users:count",
    "um:users:delete",
    "um:roles:view",
    "um:users:user-details:view",
    "um:users:cred:change",
    "um:users:search",
    "um:users:is-exist",
    "um:users:update",
    "um:users:invite",
    "um:admin:users:view",
    "dm:admin:enrollment:update",
    "gm:devices:view",
    "gm:groups:update",
    "gm:groups:add",
    "gm:groups:device:view",
    "gm:devices:count",
    "gm:groups:remove",
    "gm:groups:view",
    "gm:groups:groups-view",
    "gm:roles:share",
    "gm:groups:count",
    "gm:roles:view",
    "gm:devices:remove",
    "gm:devices:add",
    "gm:devices:assign",
    "dm:device-type:conf:view",
    "dm:device-type:features:view",
    "dm:device-type:view",
    "am:admin:app:install",
    "am:admin:app:uninstall",
    "gm:admin:groups:count",
    "gm:admin:groups:view",
    "dm:notif:mark-checked",
    "dm:notifications:view",
    "cm:cert:delete",
    "cm:cert:details:get",
    "cm:cert:view",
    "cm:cert:add",
    "cm:cert:verify",
    "dm:admin",
    "dm:device-type:deploy",
    "dm:device-type:event:modify",
    "dm:device-type:event:view",
    "dm:admin:device-type:modify",
    "dm:admin:device-type:view",
    "dm:admin:device-type:conf:add",
    "dm:device:enroll",
    "dm:geo:an:view",
    "dm:geo:alerts:manage",
    "dm:admin:devices:permanent-delete",
    "appm:read",
    "and:enterprise:modify",
    "and:enterprise:view"
  ],
  "isOAuthEnabled": true,
  "backendRestEndpoints": {
    "deviceMgt": "/api/device-mgt/v1.0",
    "appMgt": "/api/application-mgt-store/v1.0"
  }
}
